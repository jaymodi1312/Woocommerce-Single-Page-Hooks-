// To change add to cart text on product archives(Collection) page //

add_filter( 'woocommerce_product_add_to_cart_text', 'woocommerce_custom_product_add_to_cart_text' );  
function woocommerce_custom_product_add_to_cart_text() {
    return __( 'Buy Now', 'woocommerce' );
}

// Single page add to cart text change
add_filter('woocommerce_product_single_add_to_cart_text', 'woo_custom_cart_button_text');
 
function woo_custom_cart_button_text() {
return __('ADD TO BAG', 'woocommerce');
}

=====================================================================================================================================================================


// Varible Product Show only low price on single page //

add_filter( 'woocommerce_variable_sale_price_html', 'get_min_variation_price_format', 10, 2 );
add_filter( 'woocommerce_variable_price_html', 'get_min_variation_price_format', 10, 2 );

function get_min_variation_price_format( $price, $product ) {
    $min_variation_price = $product->get_variation_regular_price( 'min');
    return wc_price($min_variation_price);
}


=====================================================================================================================================================================

// Change Attribute Drop Down name Choose an Option value to custom text //

add_filter( 'woocommerce_dropdown_variation_attribute_options_args', 'dropdown_variation_attribute_options', 10, 1 );
function dropdown_variation_attribute_options( $args ){

    // For attribute "Type"
    if( 'pa_size-metric' == $args['attribute'] )
        $args['show_option_none'] = __( 'Choose a size', 'woocommerce' );

    // For attribute "Sizes"
//     if( 'pa_size' == $args['attribute'] )
//         $args['show_option_none'] = __( 'Select Framed or Unframed Sizes', 'woocommerce' );

    return $args;
}

=====================================================================================================================================================================


// Change Single Product Page Tabs Name and position //

add_filter( 'woocommerce_product_tabs', 'reordered_tabs', 98 );
function reordered_tabs( $tabs ) {
	$tabs['descriptions']['priority'] = 10; 
    $tabs['description']['priority'] = 15; 
	$tabs['description']['title'] = __( 'Specifications' );	
	$tabs['descriptions']['title'] = __( 'Key Features' );
    return $tabs;
}

=====================================================================================================================================================================

// Remove Additional Information Tab WooCommerce
 
add_filter( 'woocommerce_product_tabs', 'remove_info_tab', 98);
function remove_info_tab($tabs) {
 
 unset($tabs['additional_information']);
 
 return $tabs;
}
 
// Remove Reviews Tab WooCommerce
 
add_filter( 'woocommerce_product_tabs', 'remove_reviews_tab', 98);
function remove_reviews_tab($tabs) {
 
 unset($tabs['reviews']);
 
 return $tabs;
}

==========================================================================================================================================================================

// Single page add custom text after Price (NEW LINE)

add_action( 'woocommerce_single_product_summary', 'custom_text', 15 );
function custom_text() {
  print '<p class="custom_text">My text here</p>';  
}

=====================================================================================================================================================================

//Add in text after price to certain products

function themeprefix_custom_price_message( $price ) { 
	
	global $post;
		
	$product_id = $post->ID;
	$my_product_array = array( 799,796,792 );//add in product IDs
	if ( in_array( $product_id, $my_product_array )) {
		$textafter = '( Upfront Paid in Full Price )'; //add your text
		return $price . '<br /><span class="price-description">' . $textafter . '</span>';
	}
	 
	else { 
		return $price; 
	} 
}
add_filter( 'woocommerce_get_price_html', 'themeprefix_custom_price_message' );
